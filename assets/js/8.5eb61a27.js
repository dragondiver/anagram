(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{405:function(t,a,e){"use strict";e.r(a);var s=e(56),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"finding-the-best-solution"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#finding-the-best-solution"}},[t._v("#")]),t._v(" Finding the Best Solution")]),t._v(" "),e("h2",{attrs:{id:"the-problem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-problem"}},[t._v("#")]),t._v(" The Problem")]),t._v(" "),e("p",[t._v("Given an input file which contains one word per line, as an output construct a list of all anagrams from that input file. Print those words to the console, where all words that are an anagram should each other should be on the same line.")]),t._v(" "),e("h3",{attrs:{id:"sharpening-the-problem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sharpening-the-problem"}},[t._v("#")]),t._v(" Sharpening the problem")]),t._v(" "),e("p",[t._v("To make sure to find the anagrams, i added code to extract special characters and blanks from the lines.")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[t._v("word"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceAll")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[^\\\\p{IsAlphabetic}\\\\p{IsDigit}]"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("This code was not examined for performance to reduce the problem.")])])}),[],!1,null,null,null);a.default=n.exports}}]);